{"version":3,"sources":["components/Footer.js","components/Login.js","components/Register.js","components/HomeComponent.js","components/LocalComponent.js","components/StateComponent.js","components/NationalComponent.js","components/Team.js","components/Trello.js","components/Github.js","components/logoutButton.js","components/App.js","serviceWorker.js","index.js","styles/images/helen.png","styles/images/kyle.png","styles/images/brien.png","styles/images/isaac.png"],"names":["FooterPage","react_default","a","createElement","mdbreact","color","className","fluid","md","href","Date","getFullYear","React","Component","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_handleUsername","event","value","target","setState","username","_handlePassword","password","_handleSubmit","preventDefault","axios","post","state","then","response","data","user","console","log","doLoggedIn","sessionStorage","setItem","streetaddress","currentstate","zipcode","getItem","history","push","catch","err","redirectToPreviousRoute","id","name","from","location","pathname","Redirect","to","xl","icon","onSubmit","label","placeholder","type","autocomplete","onChange","Link","Register","_handleName","_handleStreetAddress","_handleCurrentState","_handleZipcode","_React$createElement","outline","left","defineProperty","Home","src","alt","lg","size","Locals","office","personOfficeInfo","_this2","addressUrl","encodeURI","concat","fetch","headers","Content-Type","json","results","newResults","values","officesArray","divisionId","personInfoArray","masterArray","_loop","i","officialIndices","forEach","index","TwitterHandle","personInfo","personEmail","emails","personPhoto","photoUrl","personUrl","urls","channels","index2","theirTwitterHandle","officeName","personName","address","undefined","party","phoneNumber","phones","twitter","email","photo","url","length","error","officeNames","map","item","style","width","key","Fragment","height","line1","line2","city","zip","dist","dataSource","sourceType","screenName","options","onLoad","tag","floating","social","States","Nationals","Team","helen","brien","kyle","isaac","Trello","reverse","hover","cascade","waves","overlay","Github","backgroundImage","rounded","withRouter","onClick","clickLogout","App","res","isLoggedIn","get","_this3","BrowserRouter","dark","expand","toggleCollapse","isOpen","navbar","active","nav","caret","right","components_logoutButton","clickLogin","Route","exact","path","render","HomeComponent","assign","components_Login","components_Register","component","Footer","Boolean","window","hostname","match","ReactDOM","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.bcb34bb6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Col, Container, Row, Footer } from \"mdbreact\";\n\n//import route Components\nimport {\n    BrowserRouter as Router,\n    Route,\n    Link,\n    Switch,\n    Redirect\n  } from \"react-router-dom\";\n  \n\n  class FooterPage extends React.Component {\n    render() {\n    return (\n    <Footer color=\"indigo darken-4 gradient\" className=\"font-small pt-4 mt-4\">\n      <Container fluid className=\"text-center text-md-center\">\n        <Row>\n          <Col md=\"6\">\n          <h5 className=\"title indigo darken-3\">Footer Content</h5>\n          <p>\n            Here you can use rows and columns here to organize your footer\n            content.\n          </p>\n          </Col>\n          <Col md=\"6\">\n          <h5 className=\"title indigo darken-3\">More Information</h5>\n          <ul>\n            <li className=\"list-unstyled\">\n              <a href=\"#!\">About Us</a>\n            </li>\n            <li className=\"list-unstyled\">\n              <a href=\"#!\">Hiring? Checkout the developers that created Polifactual!</a>\n            </li>\n            {/* <li className=\"list-unstyled\">\n              <a href=\"#!\">Link 3</a>\n            </li>\n            <li className=\"list-unstyled\">\n              <a href=\"#!\">Link 4</a>\n            </li> */}\n          </ul>\n          </Col>\n        </Row>\n      </Container>\n      <div className=\"footer-copyright text-center py-3\">\n        <Container fluid>\n          &copy; {new Date().getFullYear()} Copyright:{\" \"}\n          <a href=\"\"> Helen, Kyle, Brien, Isaac Fonseca </a>\n        </Container>\n      </div>\n    </Footer>\n    );\n    }\n    }\n    \n    export default FooterPage;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Route, Link, Switch, Redirect } from \"react-router-dom\";\nimport \"../styles/Register.css\";\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBMask, MDBRow, MDBCol, MDBIcon,\n\tMDBBtn, MDBView, MDBContainer, MDBCard, MDBCardBody, MDBInput, MDBFormInline } from \"mdbreact\";\n\n\nclass Login extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tredirectToPreviousRoute: false,\n\t\t\tid: '',\n\t\t\tname: '',\n\t\t\tusername: '',\n\t\t\tstreetaddress: '',\n\t\t\tcurrentstate: '',\n\t\t\tzipcode: '',\n\t\t\tpassword: ''\n\t\t};\n\t}\n\n\t_handleUsername = event => {\n\t\tconst value = event.target.value;\n\n\t\tthis.setState({\n\t\t\tusername: value\n\t\t});\n\t}\n\n\t_handlePassword = event => {\n\t\tconst value = event.target.value;\n\n\t\tthis.setState({\n\t\t\tpassword: value\n\t\t})\n\t}\n\n\t_handleSubmit = event => {\n\t\tevent.preventDefault();\n\n\t\taxios\n\t\t\t.post(\"/api/login\", this.state)\n\t\t\t.then(response => {\n\t\t\t\t// Need a response including the address from userObj\n\t\t\t\tif (response.data.user) {\n\t\t\t\t\tconsole.log(response.data)\n\t\t\t\t\tconst user = response.data.user;\n\t\t\t\t\tconsole.log(user);\n\t\t\t\t\tthis.props.doLoggedIn();\n\t\t\t\t\t// Save data to sessionStorage\n\t\t\t\t\t// sessionStorage.setItem('key', 'value');\n\t\t\t\t\tsessionStorage.setItem('streetaddress', user.streetaddress);\n\t\t\t\t\tsessionStorage.setItem('currentstate', user.currentstate);\n\t\t\t\t\tsessionStorage.setItem('zipcode', user.zipcode);\n\n\t\t\t\t\t// Get saved data from sessionStorage\n\t\t\t\t\tlet streetaddress = sessionStorage.getItem('streetaddress');\n\t\t\t\t\tconsole.log(streetaddress);\n\t\t\t\t\tlet currentstate = sessionStorage.getItem('currentstate');\n\t\t\t\t\tconsole.log(currentstate);\n\t\t\t\t\tlet zipcode = sessionStorage.getItem('zipcode');\n\t\t\t\t\tconsole.log(zipcode);\n\n\t\t\t\t\tthis.props.history.push(\"/local\")\n\t\t\t\t} \n\t\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t}\n\n\trender() {\n\t\tconst { from } = this.props.location.state || { from: { pathname: \"/\" } };\n    const { redirectToPreviousRoute } = this.state;\n\n    if (redirectToPreviousRoute) {\n      return <Redirect to={from} />;\n    }\n\treturn (\n\t\t<MDBMask className=\"d-flex justify-content-center align-items-center gradient\">\n\t\t<MDBContainer className=\"main\">\n\t\t  <MDBRow>\n\t\t\t<div className=\"white-text text-center text-md-left col-md-6 mt-xl-5 mb-5\">\n\t\t\t  <h1 className=\"h1-responsive font-weight-bold\">\n\t\t\t\tWelcome Back!{\" \"}\n\t\t\t  </h1>\n\t\t\t  <hr className=\"hr-light\" />\n\t\t\t</div>\n\n\t\t\t<MDBCol md=\"6\" xl=\"5\" className=\"mb-4\">\n\t\t\t  <MDBCard id=\"classic-card\">\n\t\t\t\t<MDBCardBody className=\"z-depth-2 indigo-text\">\n\t\t\t\t  <h3 className=\"text-center\">\n\t\t\t\t\t<MDBIcon icon=\"user\" /> Login\n\t\t\t\t  </h3>\n\t\t\t\t  <hr className=\"hr-light\" />\n\n\t\t\t\t  <form className=\"signup-form\" onSubmit={this._handleSubmit}>\n\t\t\t\t\t<MDBInput \n\t\t\t\t  \t\tid=\"username\" \n\t\t\t\t  \t\tlabel=\"Your name\" \n\t\t\t\t  \t\ticon=\"user\" \n\t\t \t\t\t\tplaceholder=\"Username\" \n\t\t \t\t\t\ttype=\"text\" \n\t\t \t\t\t\tname=\"username\" \n\t\t \t\t\t\tautocomplete=\"off\" \n\t\t \t\t\t\tonChange={this._handleUsername}\n\t\t \t\t\t\tvalue={this.state.username} />\n\t\t\t\t\t<MDBInput\n\t\t\t\t  \t\tid=\"password\" \n\t\t\t\t\t\tlabel=\"Your password\"\n\t\t\t\t\t\ticon=\"lock\"\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tname=\"password\" \n\t\t \t\t\t\tautocomplete=\"off\"\n\t\t \t\t\t\tonChange={this._handlePassword}\n\t\t \t\t\t\tvalue={this.state.password} />\n\t\t\t\t\t\n\t\t\t\t\t<div className=\"remember-me\">\n\t\t \t\t\t\t<input type=\"checkbox\"/>\n\t\t \t\t\t\t<span>Remember Me</span>\n\t\t \t\t\t</div>\n\n\t\t\t\t\t<div className=\"text-center mt-4 black-text\">\n\t\t\t\t\t\t<MDBBtn color=\"indigo\" type=\"submit\">Login</MDBBtn>\n\t\t\t\t\t\t<hr className=\"hr-light\" />\n\t\t\t\t\t</div>\n\t\t\t\t  \t</form>\n\t\t \t\t\t\t<a href=\"#\">Privacy Policy</a>\n\t\t\t\t\t<div className=\"register\">\n\t\t \t\t\t\t<span>Don't have an account yet?</span>\n\t\t\t\t\t\t <br />\n\t\t \t\t\t\t<Link to=\"/register\">Register here!</Link>\n\t\t \t\t\t</div>\n\n\t\t\t\t</MDBCardBody>\n\t\t\t  </MDBCard>\n\t\t\t</MDBCol>\n\t\t  </MDBRow>\n\t\t</MDBContainer>\n\t  </MDBMask>\n\t)\n}\n};\n\n\nexport default Login;","import React, {Component} from 'react';\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport '../styles/Register.css';\n\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBMask, MDBRow, MDBCol, MDBIcon,\n    MDBBtn, MDBView, MDBContainer, MDBCard, MDBCardBody, MDBInput, MDBFormInline } from \"mdbreact\";\n\n\nclass Register extends Component {\n    constructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tid: '',\n\t\t\tname: '',\n\t\t\tusername: '',\n\t\t\tstreetaddress: '',\n\t\t\tcurrentstate: '',\n\t\t\tzipcode: '',\n\t\t\tpassword: ''\n\t\t};\n    }\n    \n    _handleName = event => {\n\t\tconst value = event.target.value;\n\n\t\tthis.setState({\n\t\t\tname: value\n\t\t});\n    }\n\n    _handleUsername = event => {\n\t\tconst value = event.target.value;\n\n\t\tthis.setState({\n\t\t\tusername: value\n\t\t});\n    }\n    \n    _handleStreetAddress = event => {\n\t\tconst value = event.target.value;\n\n\t\tthis.setState({\n\t\t\tstreetaddress: value\n\t\t});\n    }\n\n    _handleCurrentState = event => {\n\t\tconst value = event.target.value;\n\n\t\tthis.setState({\n\t\t\tcurrentstate: value\n\t\t});\n    }\n\n    _handleZipcode = event => {\n\t\tconst value = event.target.value;\n\n\t\tthis.setState({\n\t\t\tzipcode: value\n\t\t});\n    }\n\n\t_handlePassword = event => {\n\t\tconst value = event.target.value;\n\n\t\tthis.setState({\n\t\t\tpassword: value\n\t\t})\n\t}\n\n\t_handleSubmit = event => {\n\t\tevent.preventDefault();\n\n\t\taxios\n\t\t\t.post(\"/api/register\", this.state)\n\t\t\t.then(response => {\n                // Need a response including the address from userObj\n                if (response.data.user) {\n                    console.log(response.data)\n\t\t\t\t\tconst user = response.data.user;\n\t\t\t\t\tconsole.log(user);\n\t\t\t\t\tthis.props.doLoggedIn();\n\t\t\t\t\t// Save data to sessionStorage\n\t\t\t\t\t// sessionStorage.setItem('key', 'value');\n\t\t\t\t\tsessionStorage.setItem('streetaddress', user.streetaddress);\n\t\t\t\t\tsessionStorage.setItem('currentstate', user.currentstate);\n\t\t\t\t\tsessionStorage.setItem('zipcode', user.zipcode);\n\t\t\t\t\t// Get saved data from sessionStorage\n\t\t\t\t\tlet streetaddress = sessionStorage.getItem('streetaddress');\n\t\t\t\t\tconsole.log(streetaddress);\n\t\t\t\t\tlet currentstate = sessionStorage.getItem('currentstate');\n\t\t\t\t\tconsole.log(currentstate);\n\t\t\t\t\tlet zipcode = sessionStorage.getItem('zipcode');\n                    console.log(zipcode);\n                    this.props.history.push('/Local')\n                }\n            })\n            .catch(err => {\n                console.log(err);\n            });\n\t}\n\n    render() {\n        return (\n          <MDBMask className=\"d-flex justify-content-center align-items-center gradient\">\n            <MDBContainer className=\"main\">\n            <MDBRow>\n                <div className=\"white-text text-center text-md-left col-md-6 mt-xl-5 mb-5 signuparea\">\n                  <h1 className=\"h1-responsive font-weight-bold\">\n                    Sign up right now!{\" \"}\n                  </h1>\n                  <hr className=\"hr-light\" />\n                  <h6 className=\"mb-4\">\n                    Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n                    Rem repellendus quasi fuga nesciunt dolorum nulla magnam\n                    veniam sapiente, fugiat! Commodi sequi non animi ea dolor\n                    molestiae, quisquam iste, maiores. Nulla.\n                  </h6>\n                  <MDBBtn outline color=\"white\">\n                    Learn More\n                  </MDBBtn>\n                </div>\n                <MDBCol md=\"6\" xl=\"5\" className=\"mb-4\">\n                  <MDBCard id=\"classic-card\">\n                    <MDBCardBody className=\"z-depth-2 indigo-text sizing\" >\n                    <form className=\"signup-form\" onSubmit={this._handleSubmit}>\n                      <h3 className=\"text-center\">\n                        <MDBIcon icon=\"user\" /> Register:\n                      </h3>\n                      <hr className=\"hr-light\" />\n                        <MDBInput left\n                            id=\"name\" \n                            label=\"Your name\" \n                            icon=\"user\" \n                            type=\"text\" \n                            name=\"name\" \n                            autocomplete=\"off\" \n                            onChange={this._handleName} \n                            value={this.state.name} />\n                        <MDBInput \n                            id =\"username\" \n                            label=\"Username\" \n                            icon=\"user\" \n                            type=\"text\" \n                            name=\"username\" \n                            autocomplete=\"off\" \n                            onChange={this._handleUsername} \n                            value={this.state.username} />\n                        <MDBInput\n                            id=\"password\" \n                            label=\"Your password\"\n                            icon=\"lock\"\n                            type=\"password\"\n                            name=\"password\" \n                            autocomplete=\"off\"\n                            onChange={this._handlePassword}\n\t\t\t\t\t\t\tvalue={this.state.password}\n                            />\n                        <MDBInput \n                            id =\"streetaddress\" \n                            label=\"Street Address\" \n                            icon=\"address-book\"\n                            type=\"text\" \n                            name=\"streetaddress\" \n                            autocomplete=\"off\"\n                            name=\"streetaddress\" \n                            onChange={this._handleStreetAddress}\n\t\t\t\t\t\t\tvalue={this.state.streetaddress} />\n                        <MDBInput \n                            id =\"currentstate\" \n                            label=\"State\" \n                            icon=\"address-book\" \n                            type=\"text\" \n                            name=\"currentstate\" \n                            autocomplete=\"off\"\n                            onChange={this._handleCurrentState}\n\t\t\t\t\t\t\tvalue={this.state.currentstate}/>\n                        <MDBInput \n                            id =\"zipcode\" \n                            icon=\"address-book\" \n                            label=\"Zipcode\" \n                            type=\"text\" \n                            name=\"zipcode\" \n                            autocomplete=\"off\"\n                            onChange={this._handleZipcode}\n\t\t\t\t\t\t\tvalue={this.state.zipcode} />\n                        <div className=\"remember-me\">\n                            <input type=\"checkbox\"/>\n                            <span>I accept Terms of Service</span>\n                        </div>\n                        <div className=\"text-center mt-4 black-text\">\n                            <MDBBtn color=\"indigo\" type=\"submit\">Register Now!</MDBBtn>\n                        </div>\n                        </form>\n                            <a href=\"#\">Privacy Policy</a>\n                        <div className=\"register\">\n                            <span>Already have an account?</span>\n                            <br />\n                            <Link to=\"/login\">Log In Here</Link>\n                        </div>\n                    </MDBCardBody>\n                  </MDBCard>\n                </MDBCol>\n              </MDBRow>\n            </MDBContainer>\n          </MDBMask>\n       \n        )\n    }\n};\n\nexport default Register;\n\n\n","import React from 'react';\n\nimport Styles from '../styles/Home.css';\n\nimport {\n    BrowserRouter as Router,\n    Route,\n    Link,\n    Switch,\n    Redirect\n  } from 'react-router-dom';\n\nimport {\n  MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBMask, MDBRow,\n  MDBCol, MDBIcon,\n  MDBBtn, MDBView, MDBContainer, MDBCard, MDBCardBody, MDBInput, MDBFormInline\n  } from \"mdbreact\";\n\n\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <div>\n        <MDBContainer>\n        {/* First Section */}\n          <MDBMask className=\"d-flex justify-content-center align-items-center gradient\">\n              <MDBContainer className=\"main\">\n                <MDBRow>\n                  <div className=\"white-text text-center text-md-left col-md-6 mt-xl-5 mb-5\">\n                    <h1 className=\"h1-responsive font-weight-bold mt-sm-5\">\n                      Polifactual{\" \"}\n                    </h1>\n                    <hr className=\"hr-light\" />\n                    <h6 className=\"mb-4\">\n                      Bringing you your local, state, and national legislative representatives' information right to you from one source.\n                    </h6>\n                    <MDBBtn color=\"white\">Download</MDBBtn>\n                    <MDBBtn outline color=\"white\">\n                      Learn More\n                    </MDBBtn>\n                  </div>\n                  <MDBCol md=\"6\" xl=\"5\" className=\"mt-xl-5\">\n                    <img\n                      src=\"https://mdbootstrap.com/img/Mockups/Transparent/Small/admin-new.png\"\n                      alt=\"\"\n                      className=\"img-fluid\"\n                    />\n                  </MDBCol>\n                </MDBRow>\n              </MDBContainer>\n            </MDBMask>\n        </MDBContainer>\n\n\n {/* Second Section */}\n <MDBContainer className=\"second\">\n <section className=\"my-5\">\n         <h2 className=\"h1-responsive font-weight-bold text-center my-5\">\n           Why is it so great?\n         </h2>\n         <p className=\"lead grey-text w-responsive text-center mx-auto mb-5\">\n           For those that have struggled to keep informed about poltics that affect thier every day lives, we have developed Polifactual to bring you all the information relevant too your neighborhood with just a few clicks.\n         </p>\n\n         <MDBRow>\n           <MDBCol lg=\"5\" className=\"text-center text-lg-left\">\n             <img\n              className=\"img-fluid\"\n              src=\"https://mdbootstrap.com/img/Photos/Others/screens-section.jpg\"\n              alt=\"\"\n            />\n          </MDBCol>\n          <MDBCol lg=\"7\">\n            <MDBRow className=\"mb-3\">\n              <MDBCol size=\"1\">\n                <MDBIcon icon=\"mail-forward\" size=\"lg\" className=\"indigo-text\" />\n              </MDBCol>\n              <MDBCol xl=\"10\" md=\"11\" size=\"10\">\n                <h5 className=\"font-weight-bold mb-3\">Local</h5>\n                <p className=\"grey-text\">\n                 Local info\n                </p>\n              </MDBCol>\n            </MDBRow>\n            <MDBRow className=\"mb-3\">\n              <MDBCol size=\"1\">\n                <MDBIcon icon=\"mail-forward\" size=\"lg\" className=\"indigo-text\" />\n              </MDBCol>\n              <MDBCol xl=\"10\" md=\"11\" size=\"10\">\n                <h5 className=\"font-weight-bold mb-3\">State</h5>\n                <p className=\"grey-text\">\n                  State info\n                </p>\n              </MDBCol>\n            </MDBRow>\n            <MDBRow className=\"mb-3\">\n              <MDBCol size=\"1\">\n                <MDBIcon icon=\"mail-forward\" size=\"lg\" className=\"indigo-text\" />\n              </MDBCol>\n              <MDBCol xl=\"10\" md=\"11\" size=\"10\">\n                <h5 className=\"font-weight-bold mb-3\">National</h5>\n                <p className=\"grey-text\">\n                Polifactual can display your legislative representatives at a national level, such as President, Vice-President and information pertaining to their seats.\n                </p>\n              </MDBCol>\n            </MDBRow>\n          </MDBCol>\n        </MDBRow>\n      </section>\n</MDBContainer>\n\n\n{/* Third Section */}\n      <MDBContainer>\n      <section className=\"my-5\">\n        <h2 className=\"h1-responsive font-weight-bold text-center my-5\">\n          What all can Polifactual do?\n        </h2>\n        <p className=\"lead grey-text w-responsive text-center mx-auto mb-5\">\n          Below you will see several points highlighting some of our features  \n        </p>\n\n        <MDBRow>\n          <MDBCol md=\"4\">\n            <MDBRow className=\"mb-3\">\n              <MDBCol size=\"2\">\n                <MDBIcon\n                  icon=\"flag-checkered\"\n                  size=\"2x\"\n                  className=\"deep-purple-text\"\n                />\n              </MDBCol>\n              <MDBCol size=\"10\">\n                <h5 className=\"font-weight-bold mb-3\">National</h5>\n                <p className=\"grey-text\">\n                  Polifactual can display your legislative representatives at a national level\n                </p>\n              </MDBCol>\n            </MDBRow>\n            <MDBRow className=\"mb-3\">\n              <MDBCol size=\"2\">\n                <MDBIcon icon=\"flask\" size=\"2x\" className=\"deep-purple-text\" />\n              </MDBCol>\n              <MDBCol size=\"10\">\n                <h5 className=\"font-weight-bold mb-3\">Experimental</h5>\n                <p className=\"grey-text\">\n                Want to see who represents other areas and not just your current locality? You can change your information to display other localities and inform you of other representatives.\n                </p>\n              </MDBCol>\n            </MDBRow>\n            <MDBRow className=\"mb-3\">\n              <MDBCol size=\"2\">\n                <MDBIcon icon=\"glass\" size=\"2x\" className=\"deep-purple-text\" />\n              </MDBCol>\n              <MDBCol size=\"10\">\n                <h5 className=\"font-weight-bold mb-3\">Personal</h5>\n                <p className=\"grey-text\">\n                  Once you are registered, you will be able to see your unique homepage, with your local and state information.\n                </p>\n              </MDBCol>\n            </MDBRow>\n          </MDBCol>\n          <MDBCol md=\"4\" className=\"text-name\">\n            <img\n              className=\"img-fluid\"\n              src=\"https://mdbootstrap.com/img/Mockups/Transparent/Small/iphone-portfolio1.png\"\n              alt=\"\"\n            />\n          </MDBCol>\n          <MDBCol md=\"4\">\n            <MDBRow className=\"mb-3\">\n              <MDBCol size=\"2\">\n                <MDBIcon icon=\"heart\" size=\"2x\" className=\"deep-purple-text\" />\n              </MDBCol>\n              <MDBCol size=\"10\">\n                <h5 className=\"font-weight-bold mb-3\">Twitter</h5>\n                <p className=\"grey-text\">\n                  Want to go ahead and follow your representatives or like their posts? Polifactual allows you to see twitter feeds for those who are on the social media site.\n                </p>\n              </MDBCol>\n            </MDBRow>\n            <MDBRow className=\"mb-3\">\n              <MDBCol size=\"2\">\n                <MDBIcon icon=\"flash\" size=\"2x\" className=\"deep-purple-text\" />\n              </MDBCol>\n              <MDBCol size=\"10\">\n                <h5 className=\"font-weight-bold mb-3\">Rapid</h5>\n                <p className=\"grey-text\">\n                  With just a few clicks, all your relevant legislative information will be displayed before your eyes\n                </p>\n              </MDBCol>\n            </MDBRow>\n            <MDBRow className=\"mb-3\">\n              <MDBCol size=\"2\">\n                <MDBIcon icon=\"magic\" size=\"2x\" className=\"deep-purple-text\" />\n              </MDBCol>\n              <MDBCol size=\"10\">\n                <h5 className=\"font-weight-bold mb-3\">Magical</h5>\n                <p className=\"grey-text\">\n                  \n                </p>\n              </MDBCol>\n            </MDBRow>\n          </MDBCol>\n        </MDBRow>\n      </section>\n      </MDBContainer>\n\n\n      </div>\n    );\n  }\n}\nexport default Home;\n\n\n","import React, { Component } from \"react\";\nimport { Timeline } from \"react-twitter-widgets\";\n\nimport { MDBIcon, MDBContainer, MDBBtn } from \"mdbreact\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImage,\n  CardTitle,\n  CardText,\n  Col\n} from \"mdbreact\";\n\nclass Locals extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      office: [],\n      personOfficeInfo: []\n    };\n  }\n\n  componentDidMount() {\n    // let apiRequest1 = fetch(\n    //   \"https://www.googleapis.com/civicinfo/v2/representatives?address=1554%20line%20st.%2030032&includeOffices=true&key=git\",\n    //   { headers: { \"Content-Type\": \"application/json; charset=utf-8\" } }\n    // ).then(response => response.json());\n\n    // let apiRequest2 = fetch(\n    //   \"http://www.opensecrets.org/api/?method=getLegislators&id=NJ&\",\n    //   {\n    //     headers: { apikey: \"cd6516f049350cdb9ffc4264527af56e\" }\n    //   }\n    // ).then(response => response.json());\n\n    // let combinedData = { apiRequest1: {}, apiRequest2: {} };\n\n    // Promise.all([apiRequest1, apiRequest2])\n    //   .then(function(values) {\n    //     combinedData[\"apiRequest1\"] = values[0];\n    //     combinedData[\"apiRequest2\"] = values[1];\n    //     return combinedData;\n    //   })\n\n    let streetaddress = sessionStorage.getItem(\"streetaddress\");\n    console.log(streetaddress);\n    let zipcode = sessionStorage.getItem(\"zipcode\");\n    console.log(zipcode);\n\n    const addressUrl = encodeURI(`${streetaddress} ${zipcode}`);\n    console.log(addressUrl);\n\n    fetch(\n      `https://www.googleapis.com/civicinfo/v2/representatives?address=${addressUrl}&includeOffices=true&key=AIzaSyB3cRW6zO8D3INc-NHDFA-0ck77gQAYpOU`,\n      { headers: { \"Content-Type\": \"application/json; charset=utf-8\" } }\n    )\n      .then(response => response.json())\n      .then(results => {\n        let newResults = Object.values(results); // newResults is the json response array of the users civic representives at each elected level of government.\n        // let otherResults = Object.values(combinedData.apiRequest2); // otherResults will be json response array of the users civic representives at each elected level of government.\n        console.log(newResults);\n        // console.log(otherResults);\n        let officesArray = newResults[3]; // officesArray equals the names of the office and info about that office for each level of elected government and its\n        console.log(officesArray);\n        console.log(officesArray[0].divisionId);\n        console.log(\"hi\");\n        console.log(newResults[4]);\n        let personInfoArray = newResults[4]; // personInfoArray is the names and info for the person who currently has been elected to the seat of the newResults array.\n        let masterArray = [];\n        // console.log(newResults[3][newResults[3].length - 1].divisionId);\n\n        for (let i = 3; i < officesArray.length; i++) {\n          let office = officesArray[i];\n          office.officialIndices.forEach(index => {\n            // console.log(personInfoArray[index]);\n            console.log(\"what is happening?!?!\");\n            let personInfo = personInfoArray[index];\n            let TwitterHandle;\n            // console.log(personInfo.address);\n            let personEmail = personInfo.emails || null; // if an elected official has an email address add that value to personEmail.\n            let personPhoto = personInfo.photoUrl || null; //if an elected official has a photo url add that value to personPhoto\n            let personUrl = personInfo.urls || null; // if an elected official has a website (personal or for the department) add that value to personUrl\n            console.log(personInfo);\n            console.log(personUrl);\n            // if (personInfo.address) {\n            if (personInfoArray[index].channels) {\n              // console.log(\"fart machine\");\n              personInfo.channels.forEach(index2 => {\n                if (index2.type === \"Twitter\") {\n                  // console.log(\"hey buddy!\");\n                  // console.log(index2.id);\n                  let theirTwitterHandle = index2.id;\n                  TwitterHandle = theirTwitterHandle;\n                  return TwitterHandle;\n                }\n              });\n\n              let personOfficeInfo = {\n                officeName: office.name,\n                personName: personInfo.name,\n                address: personInfo.address[0] || undefined,\n                party: personInfo.party,\n                phoneNumber: personInfo.phones[0],\n                twitter: TwitterHandle,\n                email: personEmail,\n                photo: personPhoto,\n                url: personUrl\n              };\n              masterArray.push(personOfficeInfo);\n            }\n          });\n        }\n\n        this.setState({\n          personOfficeInfo: masterArray\n        });\n      })\n      .catch(function(error) {\n        console.log(\"Looks like there was a problem: \\n\", error);\n      });\n  }\n\n  render() {\n    let officeNames = this.state.personOfficeInfo.map(function(item, index) {\n      return (\n        <Col>\n          <Card style={{ width: \"20rem\" }}>\n            {/* <CardImage\n              className=\"img-fluid\"\n              src=\"https://mdbootstrap.com/img/Photos/Others/images/43.jpg\"\n              /> */}\n            <CardBody className=\"h-100 w-100\">\n              <ul key={index}>\n                <CardTitle>\n                  {item.photo ? (\n                    <>\n                      <img\n                        style={{ width: \"13rem\", height: \"15rem\" }}\n                        src={item.photo}\n                        alt=\"\"\n                      />\n                    </>\n                  ) : null}\n                  {item.personName ? (\n                    <>\n                      <a href={item.url}>{item.personName}</a>\n                    </>\n                  ) : null}\n                  <br />\n                  {item.officeName ? <>{item.officeName}</> : null}\n                  <br />\n                </CardTitle>\n                <CardText>\n                  {item.address.line1 ? <>{item.address.line1}</> : null}\n                  {item.address.line2 ? <>{item.address.line2}</> : null}\n                  {item.address.city ? <>{item.address.city}</> : null}\n                  {item.address.state ? <>{item.address.state}</> : null}\n                  {item.address.zip ? <>{item.address.zip}</> : null}\n                  {item.party ? <>{item.party}</> : null}\n                  {item.phoneNumber ? <>{item.phoneNumber}</> : null}\n                  {/* {item.url ? <a href={item.url}>{item.url}</a> : null} */}\n                  {item.twitter ? (\n                    <>\n                      <Timeline\n                        dataSource={{\n                          sourceType: \"profile\",\n                          screenName: item.twitter\n                        }}\n                        options={{\n                          username: item.twitter,\n                          height: \"400\",\n                          width: \"60%\"\n                        }}\n                        onLoad={() => console.log(\"Timeline is loaded!\")}\n                      />\n                    </>\n                  ) : null}\n                </CardText>\n              </ul>\n              <MDBContainer>\n                {item.email ? (\n                  <MDBBtn\n                    size=\"lg\"\n                    tag=\"a\"\n                    floating\n                    social=\"email\"\n                    href={\"mailto:\" + item.email}\n                  >\n                    <MDBIcon icon=\"envelope\" />\n                  </MDBBtn>\n                ) : null}\n              </MDBContainer>\n            </CardBody>\n          </Card>\n        </Col>\n      );\n    });\n    return (\n      <div className=\"Main\">\n        <>{officeNames}</>\n      </div>\n    );\n  }\n}\n\nexport default Locals;\n","import React, { Component } from \"react\";\nimport { Timeline } from \"react-twitter-widgets\";\nimport { MDBIcon, MDBContainer, MDBBtn } from \"mdbreact\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImage,\n  CardTitle,\n  CardText,\n  Col\n} from \"mdbreact\";\n\nclass States extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      office: [],\n      personOfficeInfo: []\n    };\n  }\n\n  componentDidMount() {\n    let streetaddress = sessionStorage.getItem(\"streetaddress\");\n    console.log(streetaddress);\n    let zipcode = sessionStorage.getItem(\"zipcode\");\n    console.log(zipcode);\n\n    const addressUrl = encodeURI(`${streetaddress} ${zipcode}`);\n    console.log(addressUrl);\n\n    fetch(\n      `https://www.googleapis.com/civicinfo/v2/representatives?address=${addressUrl}&includeOffices=true&key=AIzaSyB3cRW6zO8D3INc-NHDFA-0ck77gQAYpOU`,\n      { headers: { \"Content-Type\": \"application/json; charset=utf-8\" } }\n    )\n      .then(response => response.json())\n      .then(results => {\n        // console.log(Object.values(results[3]));\n        let newResults = Object.values(results); // newResults will be json response array of the users civic representives at each elected level of government.\n        console.log(newResults);\n        let officesArray = newResults[3]; // officesArray equals the names of the office and info about that office for each level of elected government and its\n        console.log(newResults[3]);\n        console.log(newResults[4]);\n        let personInfoArray = newResults[4]; // personInfoArray is the names and info for the person who currently has been elected to the seat of the newResults array.\n        let masterArray = [];\n        console.log(newResults[3][2].divisionId);\n        officesArray.forEach(office => {\n          if (office.divisionId === newResults[3][2].divisionId) {\n            //   console.log(office.name);\n            //   console.log(office.officialIndices);\n            office.officialIndices.forEach(index => {\n              // console.log(personInfoArray[index]);\n              let personInfo = personInfoArray[index];\n              let TwitterHandle;\n              let personEmail = personInfo.emails || null; // if an elected official has an email address add that value to personEmail.\n              let personPhoto = personInfo.photoUrl || null; //if an elected official has a photo url add that value to personPhoto\n              let personUrl = personInfo.urls || null; // if an elected official has a website (personal or for the department) add that value to personUrl\n\n              if (personInfoArray[index].channels) {\n                // console.log(\"fart machine\");\n                personInfo.channels.forEach(index2 => {\n                  if (index2.type === \"Twitter\") {\n                    // console.log(\"hey buddy!\");\n                    // console.log(index2.id);\n                    let theirTwitterHandle = index2.id;\n                    TwitterHandle = theirTwitterHandle;\n                    return TwitterHandle;\n                  }\n                });\n              }\n              console.log(office.name);\n              let personOfficeInfo = {\n                officeName: office.name,\n                personName: personInfo.name,\n                address: personInfo.address[0],\n                party: personInfo.party,\n                phoneNumber: personInfo.phones[0],\n                twitter: TwitterHandle,\n                email: personEmail,\n                photo: personPhoto,\n                url: personUrl\n              };\n              masterArray.push(personOfficeInfo);\n            });\n          }\n        });\n\n        this.setState({\n          personOfficeInfo: masterArray\n        });\n      });\n\n    // fetch(\n    //   \"https://www.googleapis.com/civicinfo/v2/elections?&key=AIzaSyB3cRW6zO8D3INc-NHDFA-0ck77gQAYpOU\",\n    //   { headers: { \"Content-Type\": \"application/json; charset=utf-8\" } }\n    // )\n    //   .then(response => response.json())\n    //   .then(data => console.log(data));\n  }\n\n  render() {\n    let officeNames = this.state.personOfficeInfo.map(function(item, index) {\n      return (\n        <Col className=\"main d-flex flex-row\">\n          <Card style={{ width: \"20rem\" }} className=\"p-2\">\n            {/* <CardImage\n              className=\"img-fluid\"\n              src=\"https://mdbootstrap.com/img/Photos/Others/images/43.jpg\"\n              /> */}\n            <CardBody className=\"h-100 w-100\">\n              <ul key={index}>\n                <CardTitle>\n                  {item.photo ? (\n                    <div>\n                      <img\n                        style={{ width: \"13rem\", height: \"15rem\" }}\n                        src={item.photo}\n                        alt=\"\"\n                      />\n                    </div>\n                  ) : null}\n                  {item.personName ? (\n                    <>\n                      <a href={item.url}>{item.personName}</a>\n                    </>\n                  ) : null}\n                  <br />\n                  {item.officeName ? <>{item.officeName}</> : null}\n                  <br />\n                </CardTitle>\n                <CardText>\n                  {item.address.line1 ? <>{item.address.line1}</> : null}\n                  {item.address.line2 ? <>{item.address.line2}</> : null}\n                  {item.address.city ? <>{item.address.city}</> : null}\n                  {item.address.state ? <>{item.address.state}</> : null}\n                  {item.address.zip ? <>{item.address.zip}</> : null}\n                  {item.party ? <>{item.party}</> : null}\n                  {item.phoneNumber ? <>{item.phoneNumber}</> : null}\n                  {/* {item.url ? <a href={item.url}>{item.url}</a> : null} */}\n                  {item.twitter ? (\n                    <>\n                      <Timeline\n                        dataSource={{\n                          sourceType: \"profile\",\n                          screenName: item.twitter\n                        }}\n                        options={{\n                          username: item.twitter,\n                          height: \"400\",\n                          width: \"60%\"\n                        }}\n                        onLoad={() => console.log(\"Timeline is loaded!\")}\n                      />\n                    </>\n                  ) : null}\n                </CardText>\n              </ul>\n              <MDBContainer>\n                {item.email ? (\n                  <MDBBtn\n                    size=\"lg\"\n                    tag=\"a\"\n                    floating\n                    social=\"email\"\n                    href={\"mailto:\" + item.email}\n                  >\n                    <MDBIcon icon=\"envelope\" />\n                  </MDBBtn>\n                ) : null}\n              </MDBContainer>\n            </CardBody>\n          </Card>\n        </Col>\n      );\n    });\n\n    return (\n      // <div>\n      //   <div>{officeNames}</div>\n      <div className=\"Main\">\n        <p>{officeNames}</p>\n      </div>\n    );\n  }\n}\n\nexport default States;\n","import { Timeline } from \"react-twitter-widgets\";\nimport React, { Component } from \"react\";\n// import TwitterHandle from \"./TwitterHandle\";\n\n\nimport { Carousel, CarouselInner, CarouselItem, Container, Row } from \"mdbreact\";\n\nimport { MDBIcon, MDBContainer, MDBBtn, MDBRow, MDBCol } from \"mdbreact\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImage,\n  CardTitle,\n  CardText,\n  Col\n} from \"mdbreact\";\n\nclass Nationals extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      office: [],\n      personOfficeInfo: []\n    };\n  }\n\n  componentDidMount() {\n    let streetaddress = sessionStorage.getItem(\"streetaddress\");\n    console.log(streetaddress);\n    let zipcode = sessionStorage.getItem(\"zipcode\");\n    console.log(zipcode);\n\n    const addressUrl = encodeURI(`${streetaddress} ${zipcode}`);\n    console.log(addressUrl);\n\n    fetch(\n      `https://www.googleapis.com/civicinfo/v2/representatives?address=${addressUrl}&includeOffices=true&key=AIzaSyB3cRW6zO8D3INc-NHDFA-0ck77gQAYpOU`,\n      { headers: { \"Content-Type\": \"application/json; charset=utf-8\" } }\n    )\n      .then(response => response.json())\n      .then(results => {\n        // console.log(Object.values(results[3]));\n        let newResults = Object.values(results); // newResults will be json response array of the users civic representives at each elected level of government.\n        let officesArray = newResults[3]; // officesArray equals the names of the office and info about that office for each level of elected government and its\n        console.log(newResults[3]);\n        console.log(newResults[4]);\n        let personInfoArray = newResults[4]; // personInfoArray is the names and info for the person who currently has been elected to the seat of the newResults array.\n        let masterArray = [];\n        // console.log(newResults[3][0].divisionId);\n\n        officesArray.forEach(office => {\n          if (office.divisionId === newResults[3][0].divisionId) {\n            //   console.log(office.name);\n            //   console.log(office.officialIndices);\n            office.officialIndices.forEach(index => {\n              // console.log(personInfoArray[index]);\n              let personInfo = personInfoArray[index];\n              //   console.log(\"hi\");\n              //   console.log(personInfoArray[index].channels);\n              let TwitterHandle;\n              let personEmail = personInfo.emails || null; // if an elected official has an email address add that value to personEmail.\n              let personPhoto = personInfo.photoUrl || null; //if an elected official has a photo url add that value to personPhoto\n              let personUrl = personInfo.urls || null; // if an elected official has a website (personal or for the department) add that value to personUrl\n              if (personInfoArray[index].channels) {\n                // console.log(\"fart machine\");\n                personInfo.channels.forEach(index2 => {\n                  if (index2.type === \"Twitter\") {\n                    // console.log(\"hey buddy!\");\n                    // console.log(index2.id);\n                    let theirTwitterHandle = index2.id;\n                    TwitterHandle = theirTwitterHandle;\n                    return TwitterHandle;\n                  }\n                });\n              }\n              console.log(TwitterHandle);\n              let personOfficeInfo = {\n                officeName: office.name,\n                personName: personInfo.name,\n                address: personInfo.address[0],\n                party: personInfo.party,\n                phoneNumber: personInfo.phones[0],\n                twitter: TwitterHandle,\n                email: personEmail,\n                photo: personPhoto,\n                url: personUrl\n              };\n              masterArray.push(personOfficeInfo);\n            });\n          }\n        });\n\n        this.setState({\n          personOfficeInfo: masterArray\n        });\n      });\n\n    // fetch(\n    //   \"https://www.googleapis.com/civicinfo/v2/elections?&key=AIzaSyB3cRW6zO8D3INc-NHDFA-0ck77gQAYpOU\",\n    //   { headers: { \"Content-Type\": \"application/json; charset=utf-8\" } }\n    // )\n    //   .then(response => response.json())\n    //   .then(data => console.log(data));\n  }\n\n  render() {\n    let officeNames = this.state.personOfficeInfo.map(function(item, index) {\n      return (\n\n        <MDBContainer className=\"main d-flex flex-row\"> \n          <Card style={{ width: \"30rem\" }} className=\"p-2\">\n            {/* <CardImage\n              className=\"img-fluid\"\n              src=\"https://mdbootstrap.com/img/Photos/Others/images/43.jpg\"\n              /> */}\n            <CardBody className=\"h-100 w-100\">\n              <li key={index}>\n                <CardTitle>\n                  {item.photo ? (\n                    <div>\n                      <img style={{width: '13rem', height: '15rem'}} src={item.photo} alt=\"\" />\n                    </div>\n                  ) : null}\n                  {item.personName ? <><a href={item.url}>{item.personName}</a></> : null}\n                  <br />\n                  {item.officeName ? <>{item.officeName}</> : null}\n                  <br />\n                </CardTitle>\n                <CardText>\n                  {item.address.line1 ? <>{item.address.line1}</> : null}\n                  {item.address.line2 ? <>{item.address.line2}</> : null}\n                  {item.address.city ? <>{item.address.city}</> : null}\n                  {item.address.state ? <>{item.address.state}</> : null}\n                  {item.address.zip ? <>{item.address.zip}</> : null}\n                  {item.party ? <>{item.party}</> : null}\n                  {item.phoneNumber ? <>{item.phoneNumber}</> : null}\n                  {item.twitter ? (\n                    <>\n                      <Timeline\n                        dataSource={{\n                          sourceType: \"profile\",\n                          screenName: item.twitter\n                        }}\n                        options={{\n                          username: item.twitter,\n                          height: \"400\",\n                          width: \"60%\"\n                        }}\n                        onLoad={() => console.log(\"Timeline is loaded!\")}\n                      />\n                    </>\n                  ) : null}\n                </CardText>\n              </li>\n              <MDBContainer>\n              {item.email ? (\n                    <MDBBtn size=\"lg\" tag=\"a\" floating social=\"email\" href={\"mailto:\" + item.email}>\n                    <MDBIcon icon=\"envelope\" />\n                  </MDBBtn>\n                  ) : null}\n              </MDBContainer>\n            </CardBody>\n          </Card>\n \n\n        </MDBContainer>\n      );\n    });\n\n    return (\n\n      <div>\n        <>{officeNames}</>\n      </div>\n    );\n  }\n}\n\nexport default Nationals;\n","import React, { Component } from \"react\";\n\nimport {  MDBRow, MDBCol, MDBCard, MDBAvatar, MDBCardBody, MDBIcon } from \"mdbreact\";\n\nimport styles from '../styles/Team.css';\n\nimport helen from '../styles/images/helen.png';\nimport kyle from '../styles/images/kyle.png';\nimport brien from '../styles/images/brien.png';\nimport isaac from '../styles/images/isaac.png';\n\n\n\n\nclass Team extends React.Component {\n    render() {\n      return (\n        <MDBCard className=\"my-5 px-5 pb-5 text-center\">\n          <MDBCardBody>\n            <h2 className=\"h1-responsive font-weight-bold my-5\">\n              Our amazing team\n            </h2>\n            <p className=\"grey-text w-responsive mx-auto mb-5\">\n              Our team is compromised of four DigitalCrafts coding bootcamp graduates with varying backgrounds and interests. Below is a little bit more about us, check us out!\n            </p>\n            <MDBRow>\n              <MDBCol lg=\"3\" md=\"6\" className=\"mb-lg-0 mb-5\">\n                <img src={helen} className=\"rounded-circle z-depth-1 img-fluid newphotosize\" />\n                <h5 className=\"font-weight-bold mt-4 mb-3\">Helen Harris</h5>\n                <p className=\"text-uppercase blue-text\">Software Engineer</p>\n                <p className=\"grey-text\">\n                  Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet,\n                  consectetur, adipisci sed quia non numquam modi tempora eius.\n                </p>\n                <ul className=\"list-unstyled mb-0\">\n                <a href=\"mailto:hchang0803@outlook.com\" className=\"p-2 fa-lg\">\n                    <MDBIcon icon=\"envelope\" className=\"blue-text\" />\n                </a>\n                <a href=\"https://www.linkedin.com/in/helen-harris-50205b15/\" className=\"p-2 fa-lg\">\n                    <MDBIcon icon=\"linkedin\" className=\"blue-text\" />\n                  </a>\n                  <a href=\"https://github.com/hharris0803\" className=\"p-2 fa-lg\">\n                    <MDBIcon icon=\"github\" className=\"blue-text\" />\n                  </a>\n                </ul>\n              </MDBCol>\n\n              <MDBCol lg=\"3\" md=\"6\" className=\"mb-lg-0 mb-5\">\n              <img src={brien} className=\"rounded-circle z-depth-1 img-fluid\" />\n                <h5 className=\"font-weight-bold mt-4 mb-3\">Brien Mizell</h5>\n                <p className=\"text-uppercase blue-text\">Software Engineer</p>\n                <p className=\"grey-text\">\n                  Sed ut perspiciatis unde omnis iste natus error sit voluptatem\n                  ipsa accusantium doloremque rem laudantium totam aperiam.\n                </p>\n                <ul className=\"list-unstyled mb-0\">\n                <a href=\"mailto:brienmizell@me.com\" className=\"p-2 fa-lg\">\n                    <MDBIcon icon=\"envelope\" className=\"blue-text\" />\n                </a>\n                <a href=\"https://www.linkedin.com/in/brienmizell/\" className=\"p-2 fa-lg\">\n                    <MDBIcon icon=\"linkedin\" className=\"blue-text\" />\n                  </a>\n                  <a href=\"https://github.com/brienmizell\" className=\"p-2 fa-lg\">\n                    <MDBIcon icon=\"github\" className=\"blue-text\" />\n                  </a>\n                </ul>\n              </MDBCol>\n\n              <MDBCol lg=\"3\" md=\"6\" className=\"mb-lg-0 mb-5\">\n              <img src={kyle} className=\"rounded-circle z-depth-1 img-fluid\" />\n                <h5 className=\"font-weight-bold mt-4 mb-3\">Kyle Sekellick</h5>\n                <p className=\"text-uppercase blue-text\">Software Engineer</p>\n                <p className=\"grey-text\">\n                  Excepteur sint occaecat cupidatat non proident, sunt in culpa\n                  qui officia deserunt mollit anim est fugiat nulla id eu laborum.\n                </p>\n                <ul className=\"list-unstyled mb-0\">\n                <a href=\"mailto:sekellickkyle@yahoo.com\" className=\"p-2 fa-lg\">\n                    <MDBIcon icon=\"envelope\" className=\"blue-text\" />\n                </a>\n                  <a href=\"https://www.linkedin.com/in/kyle-sekellick-b16070135/\" className=\"p-2 fa-lg\">\n                    <MDBIcon icon=\"linkedin\" className=\"blue-text\" />\n                  </a>\n                  <a href=\"https://github.com/Kllicks\" className=\"p-2 fa-lg\">\n                    <MDBIcon icon=\"github\" className=\"blue-text\" />\n                  </a>\n                </ul>\n              </MDBCol>\n\n              <MDBCol lg=\"3\" md=\"6\" className=\"mb-lg-0 mb-5\">\n              <img src={isaac} className=\"rounded-circle z-depth-1 img-fluid\" />\n                <h5 className=\"font-weight-bold mt-4 mb-3\">Isaac Fonseca</h5>\n                <p className=\"text-uppercase blue-text\">Software Engineer</p>\n                <p className=\"grey-text\">\n                  Exercise Physiologist turned Full- Stack Software Engineer, with a passion for competitive video gaming and soccer. \n                </p>\n                <ul className=\"list-unstyled mb-0\">\n                <a href=\"mailto:isaacfo1010@gmail.com\" className=\"p-2 fa-lg\">\n                    <MDBIcon icon=\"envelope\" className=\"blue-text\" />\n                </a>\n                  <a href=\"https://www.linkedin.com/in/isaac-fonseca10/\" className=\"p-2 fa-lg\">\n                    <MDBIcon icon=\"linkedin\" className=\"blue-text\" />\n                  </a>\n                  <a href=\"https://github.com/isaacfo\" className=\"p-2 fa-lg\">\n                    <MDBIcon icon=\"github\" className=\"blue-text\" />\n                  </a>\n                </ul>\n              </MDBCol>\n            </MDBRow>\n          </MDBCardBody>\n        </MDBCard>\n  );\n}\n}\n\nexport default Team;","import React, { Component } from \"react\";\n\nimport { MDBContainer, MDBRow, MDBCol, MDBCard, MDBCardBody, MDBMask, MDBIcon, MDBView, MDBBtn } from \"mdbreact\";\n\nconst Trello = () => {\n  return (\n    <MDBCard className=\"my-5 px-5 pb-5\">\n      <MDBCardBody>\n        <MDBRow>\n          <MDBCol md=\"12\">\n            <MDBCard reverse>\n              <MDBView hover cascade waves>\n                <img\n                  src= \"../styles/images/Trello-min.png\"\n                  alt=\"\"\n                  className=\"img-fluid\"\n                /> \n                <MDBMask overlay=\"white-slight\" className=\"waves-light\" />\n              </MDBView>\n              <MDBCardBody cascade className=\"text-center\">\n                <h2 className=\"font-weight-bold\">\n                  Trello\n                </h2>\n                <p>\n                  Check out our Trello page!\n                </p>\n                <MDBBtn className=\"btn-fb waves-light\" color=\"indigo darken-4\">\n                  <MDBIcon icon=\"trello\" className=\"\" />\n                  <a href=\"https://trello.com/b/pipJjSew/capstone-project\">Trello</a>\n                </MDBBtn>\n              </MDBCardBody>\n            </MDBCard>\n            <MDBContainer className=\"mt-5\">\n              <p>\n                Our team chose to use Trello as our choice of project planning software. We chose to use Trello to manage our web project for two reasons. It is free and helps keep us organized and focused. \n              </p>\n            </MDBContainer>\n          </MDBCol>\n        </MDBRow>\n      </MDBCardBody>\n    </MDBCard>\n  );\n}\n\nexport default Trello;","import React from \"react\";\nimport {  MDBRow, MDBCol, MDBCard, MDBIcon, MDBBtn  } from \"mdbreact\";\n\nconst Github = () => {\n  return (\n    <div>\n      <section className=\"text-center my-5\">\n        <MDBRow>\n          <MDBCol md=\"12\" className=\"mb-4\">\n            <MDBCard\n              className=\"card-image\"\n              style={{\n                backgroundImage:\n                  \"url(https://mdbootstrap.com/img/Photos/Others/img%20%2832%29.jpg)\"\n              }}\n            >\n              <div className=\"text-white text-center d-flex align-items-center rgba-black-strong py-5 px-4 rounded\">\n                <div>\n                  <h2 className=\"purple-text py-3 font-weight-bold\">\n                    <MDBIcon icon=\"github\" size=\"lg\" />\n                    <br />\n                    <strong>Project Github</strong>\n                  </h2>\n                  <p className=\"pb-3\">\n                    Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n                    Repellat fugiat, laboriosam, voluptatem, optio vero odio\n                    nam sit officia accusamus minus error nisi architecto\n                    nulla ipsum dignissimos. Odit sed qui, dolorum!\n                  </p>\n                  <MDBBtn color=\"secondary\" rounded size=\"md\">\n                    <MDBIcon icon=\"clone\" className=\"left\" /> See Github for Project\n                  </MDBBtn>\n                </div>\n              </div>\n            </MDBCard>\n          </MDBCol>\n        </MDBRow>\n      </section>\n    </div>\n  );\n}\n\nexport default Github;","import React from 'react';\nimport { Navbar, NavbarBrand, NavbarNav, NavItem, NavLink, NavbarToggler, Collapse, FormInline, Dropdown, DropdownToggle, DropdownMenu,  DropdownItem } from \"mdbreact\";\nimport { MDBBtn } from \"mdbreact\";\nimport {\n    withRouter,\n\tBrowserRouter as Router,\n\tRoute,\n\tLink,\n\tSwitch,\n\tRedirect\n} from \"react-router-dom\";\nimport axios from 'axios';\n\n\nlet logoutButton = (props) => {\n    return (\n        <MDBBtn color=\"indigo darken-4\" onClick={props.clickLogout(props)}>Logout</MDBBtn>\n)};\nexport default withRouter(logoutButton);","import React, { Component } from \"react\";\nimport Styles from \"../styles/App.css\";\nimport FooterPage from \"./Footer\";\n\nimport Login from \"./Login\";\nimport Register from \"./Register\";\n\nimport Home from \"./HomeComponent\";\nimport Locals from \"./LocalComponent\";\nimport States from \"./StateComponent\";\nimport Nationals from \"./NationalComponent\";\nimport Team from \"./Team\";\nimport Trello from \"./Trello\";\nimport Github from \"./Github\";\nimport LogoutButton from \"./logoutButton\";\n\nimport axios from \"axios\";\n\nimport {\n  Navbar,\n  NavbarBrand,\n  NavbarNav,\n  NavItem,\n  NavLink,\n  NavbarToggler,\n  Collapse,\n  FormInline,\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"mdbreact\";\nimport { MDBBtn } from \"mdbreact\";\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn: false\n    };\n  }\n\n  clickLogout = props => {\n    return () => {\n      axios.post(\"/api/logout\").then(res => {\n        props.history.push(\"/\");\n        this.setState({ isLoggedIn: false });\n      });\n    };\n  };\n\n  doLoggedIn = () => {\n    this.setState({ isLoggedIn: true });\n  };\n\n  componentDidMount() {\n    axios.get(\"/api/verify\").then(res => {\n      if (res.data.user) {\n        this.setState({ isLoggedIn: true }, () => {\n          const user = res.data.user;\n          sessionStorage.setItem(\"streetaddress\", user.streetaddress);\n          sessionStorage.setItem(\"currentstate\", user.currentstate);\n          sessionStorage.setItem(\"zipcode\", user.zipcode);\n          console.log(\"logged in\");\n        });\n      } else {\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App bg\">\n        <Router>\n          <>\n            <Navbar color=\"transparent\" dark expand=\"md\">\n              <NavbarBrand>\n                <strong className=\"white-text\">Polifactual</strong>\n              </NavbarBrand>\n              <NavbarToggler onClick={this.toggleCollapse} />\n              <Collapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\n                <NavbarNav left>\n                  <NavItem active>\n                    <NavLink to=\"/\">Home</NavLink>\n                  </NavItem>\n                  <NavItem active>\n                    <NavLink to=\"/Github\">Github</NavLink>\n                  </NavItem>\n                  <NavItem active>\n                    <NavLink to=\"/Trello\">Trello</NavLink>\n                  </NavItem>\n                  <NavItem active>\n                    <NavLink to=\"/Team\">Meet The Team</NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <Dropdown>\n                      {this.state.isLoggedIn ? (\n                        <>\n                          <DropdownToggle nav caret>\n                            <div className=\"d-none d-md-inline\">Profile</div>\n                          </DropdownToggle>\n                          <DropdownMenu right>\n                            <DropdownItem href=\"/Local\">Local</DropdownItem>\n                            <DropdownItem href=\"/State\">State</DropdownItem>\n                            <DropdownItem href=\"/National\">\n                              National\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </>\n                      ) : null}\n                    </Dropdown>\n                  </NavItem>\n                </NavbarNav>\n                <NavbarNav right>\n                  {this.state.isLoggedIn ? (\n                    <LogoutButton clickLogout={this.clickLogout} />\n                  ) : (\n                    <Link to=\"/Register\">\n                      <MDBBtn\n                        floating\n                        color=\"indigo darken-4\"\n                        onClick={this.clickLogin}\n                      >\n                        Register\n                      </MDBBtn>\n                    </Link>\n                  )}\n                </NavbarNav>\n              </Collapse>\n            </Navbar>\n\n            {/* ROUTES */}\n            {/* <Route exact path=\"/\" component={Home} /> */}\n            <Route\n              exact\n              path=\"/\"\n              render={props => {\n                return <Home clickLogout={this.clickLogout} {...props} />;\n              }}\n            />\n            {/* <Route exact path=\"/Signup\" component={Signup} /> */}\n            <Route\n              exact\n              path=\"/Login\"\n              render={props => {\n                return <Login doLoggedIn={this.doLoggedIn} {...props} />;\n              }}\n            />\n            <Route\n              path=\"/Register\"\n              render={props => {\n                return <Register doLoggedIn={this.doLoggedIn} {...props} />;\n              }}\n            />\n            <Route path=\"/Github\" component={Github} />\n            <Route path=\"/Trello\" component={Trello} />\n            <Route path=\"/Team\" component={Team} />\n            <Route exact path=\"/Local\" component={Locals} />\n            <Route exact path=\"/State\" component={States} />\n            <Route exact path=\"/National\" component={Nationals} />\n          </>\n        </Router>\n\n        {/* Footer */}\n        <FooterPage />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css'; \nimport 'mdbreact/dist/css/mdb.css';\n\n\nReactDOM.render((<App/>), document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/helen.4337cd52.png\";","module.exports = __webpack_public_path__ + \"static/media/kyle.241334f4.png\";","module.exports = __webpack_public_path__ + \"static/media/brien.895757cf.png\";","module.exports = __webpack_public_path__ + \"static/media/isaac.7430d311.png\";"],"sourceRoot":""}